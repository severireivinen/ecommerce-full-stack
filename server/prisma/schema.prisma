// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  id                String             @id @default(uuid())
  email             String             @unique
  password          String
  firstName         String
  lastName          String
  phone             String
  registeredAt      DateTime           @default(now())
  accessToken       String?            @unique
  shoppingCartItems ShoppingCartItem[]
  orders            Order[]
  address           Address?           @relation(fields: [addressId], references: [id])
  addressId         String?            @unique
}

model Address {
  id       String    @id @default(uuid())
  address  String
  city     String
  postal   String
  customer Customer?

}

model ShoppingCartItem {
  id         String   @id @default(uuid())
  quantity   Int
  price      Decimal
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String

  @@unique([productId, customerId])
}

model Product {
  id                String             @id @default(uuid())
  name              String
  description       String
  price             Decimal
  stock             Int
  location          String             @unique
  productCategory   ProductCategory?   @relation(fields: [productCategoryId], references: [id])
  productCategoryId String?
  shoppingCartItems ShoppingCartItem[]
  orderItems        OrderItem[]
}

model ProductCategory {
  id          String    @id @default(uuid())
  name        String
  description String
  products    Product[]
}

model Order {
  id                String           @id @default(uuid())
  customer          Customer         @relation(fields: [customerId], references: [id])
  customerId        String
  orderItems        OrderItem[]
  orderStatusCode   OrderStatusCode? @relation(fields: [orderStatusCodeId], references: [id])
  orderStatusCodeId String
  orderedAt         DateTime         @default(now())
  shipments         Shipment[]
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  price     Decimal
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model OrderStatusCode {
  id          String  @id @default(uuid())
  processed   Boolean @unique @default(false)
  description String
  orders      Order[]
}

model Shipment {
  id         String   @id @default(uuid())
  toAdress   String
  trackingNo String
  sentAt     DateTime
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
}
